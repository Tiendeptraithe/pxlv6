
VG.DisableConnection(Error) 
VG.DisableConnection(Idled)
local Equiped = Instance.new("BoolValue")
Equiped.Parent = Player.Character
Equiped.Name = "Tool"
Player.CharacterAdded:Connect(function()
    wait(2)
    local Equiped = Instance.new("BoolValue")
    Equiped.Parent = Player.Character
    Equiped.Name = "Tool"
end)
local Equiped = function(A)
    if A:IsA("Tool") then
        Player.Character.Tool.Value = true
        wait(1)
        Player.Character.Animate.Disabled = true
        Player.Character.Animate.Disabled = false
    end
end

Player.Character.ChildAdded:Connect(function(v)
    if v:IsA("Tool") then
        Equiped(v)
    end
end)
Player.Character.ChildRemoved:Connect(function(v)
    if v:IsA("Tool") then
        Player.Character.Tool.Value = false
    end
end)

local Quests = {}
local Codes = {}
local Mobs = {}
local Bosses = {}
local Traits = {
    "Legendary",
    "Noble",
    "Mighty",
    "Hypersonic",
    "Perfect",
    "Inspiring",
    "Powerful",
    "Strong",
    "Resilient",
    "Slim",
    "Tank",
    "Fragile",
    "Weak",
    "Muscular",
    "Sensitive",
    "Balanced"
}
local Races = {
    "Human",
    "Kumate Tribe",
    "Skypiean",
    "Torino Tribe",
    "Vermin",
    "A Bizarre Human",
    "Human (Hybrid)",
    "Mink",
    "Namekian",
    "Celestial Dragon",
    "Hybrid-Saiyan",
    "Ghoul",
    "Frieza Race",
    "Fanalis",
    "Uzumaki Clan",
    "Saiyan",
}
local Arrows = {
    "Lucky Arrow",
    "Requiem Arrow",
}
local Classes = {
    "Blaster",
    "Bruiser",
    "Infiltraitor",
    "Scrapper",
    "Tactician",
    "Generalist"
}
local RemoteEvents = ReplicatedStorage:WaitForChild("RemoteEvents")
local BuyItemRemote = RemoteEvents:WaitForChild("BuyItemRemote")

local BladeCombatRemote = RemoteEvents:WaitForChild("BladeCombatRemote")
for i,v in next, Player.Quests:GetChildren() do
    if v:IsA("BoolValue") then
        table.insert(Quests, v.Name)
    end
end

for i,v in next, Player.Codes:GetChildren() do
    if v:IsA("BoolValue") then
        table.insert(Codes, v.Name)
    end
end

for i,v in next, Workspace.Live:GetChildren() do
    if v:IsA("Model") and v:FindFirstChild("HumanoidRootPart") then
        if not table.find(Mobs, v.Name) and not v:FindFirstChild("SetNetworkOwner") then
            table.insert(Mobs, v.Name)
        end
    end
end
for i,v in next, Workspace.Live:GetChildren() do
    if v:IsA("Model") and v:FindFirstChild("HumanoidRootPart") then
        if not table.find(Bosses, v.Name) and v:FindFirstChild("SetNetworkOwner") then
            table.insert(Bosses, v.Name)
        end
    end
end
Stepped:Connect(function()
    sethiddenproperty(Player, "SimulationRadius", 1000)
end)

local Hit = function(Mob)
    RemoteEvents:WaitForChild("BladeCombatRemote"):FireServer(false, Vector3.new(Mob.HumanoidRootPart.Position), CFrame.new(Mob.HumanoidRootPart.Position))
end

local GetWeapon = function()
    for i,v in next, Player.Backpack:GetChildren() do
        if v:IsA("Tool") and v:FindFirstChild("Combat Script") then
            VG.GetHumanoid():EquipTool(v)
        end
    end
end


local KillMob = function(MobName)
    for i,v in next, Workspace.Live:GetChildren() do
        if v.Name == MobName and v:FindFirstChild("HumanoidRootPart") and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 then
            VG.Teleport(v.HumanoidRootPart.Position + Vector3.new(0, -6, 3))
            Hit(v)
            local Tool = Player.Character:FindFirstChildWhichIsA("Tool")
            if Tool and not Tool:FindFirstChild("Combat Script") then
                GetWeapon()
            elseif not Tool then
                GetWeapon()
            end
            if v.Humanoid.Health ~= v.Humanoid.MaxHealth then
                v.Humanoid.Health = 0
            end
        end
    end
end

local KillBoss = function()
    for i,v in next, Workspace.Live:GetChildren() do
        if table.find(Bosses, v.Name) and v:FindFirstChild("HumanoidRootPart") then
            if v:FindFirstChild("Humanoid") and v.Humanoid.Health ~= 0 then
                VG.Teleport(v.HumanoidRootPart.Position + Vector3.new(0,-5,0))
                local Tool = Player.Character:FindFirstChildWhichIsA("Tool")
                if not Tool and Tool:FindFirstChild("Combat Script") then
                    GetWeapon()
                end
                Hit(v)
            end
        end
    end
end

local GetQuest = function(Quest)
    if not Player.PlayerGui.Menu.QuestFrame.Visible then
        RemoteEvents:WaitForChild("ChangeQuestRemote"):FireServer(ReplicatedStorage:WaitForChild("Quests"):FindFirstChild(Quest))
    end
end

local GetLegendaryBag = function()
    if #Player.Backpack:GetChildren() >= 10 then     
        BuyArmor()
        for i,v in next, Player.Backpack:GetChildren() do
            if v.Name == "Bag" and v:FindFirstChild("BagPart") then
                local Lol = v:FindFirstChild("Rarity", true)
                if Lol and (Lol.Text == "Legendary") then
                    VG.SendNotification("Found one!", "Check your inventory", nil, 15)
                    break 
                elseif Lol and (Lol.Text ~= "Legendary") then
                    v.Parent = Player.Character
                    v:Destroy()
                end
            end
        end
    else
        BuyArmor()
    end
end

local BuyArrow = function()
    RemoteEvents:WaitForChild("BuyItemRemote"):FireServer("Arrow")
end

local GetLuckyArrow = function()
    if #Player.Backpack:GetChildren() >= 10 then
        for i,v in next, Player.Backpack:GetChildren() do
            if v.Name:find("Arrow") and table.find(Arrows, v.Name) then
                v.Parent = Player.Character
                for i = 1, 13 do
                    for j, v in next, Player.PlayerValues:GetChildren() do
                        if v.Name:match("ItemStorage" .. i) and v.Value == "" then wait(0.001)
                            ReplicatedStorage.RemoteEvents.ItemStorageRemote:FireServer(v.Name)
                        end
                    end
                end
                wait(3)
            elseif not table.find(Arrows, v.Name) and v.Name:find("Arrow") then
                v.Parent = Player.Character
                v:Destroy()
            end
        end
    else
        BuyArrow()
    end
end

local RollRace = function()
    if Player.PlayerValues.Race.Value ~= WantedRace then
        if not Player.Character:FindFirstChild("Heart") or not Player.Backpack:FindFirstChild("Heart") then
            BuyItemRemote:FireServer("Heart")
        end
        if Player.Backpack:FindFirstChild("Heart") then
            Player.Backpack:FindFirstChild("Heart").Parent = Player.Character
            RemoteEvents:WaitForChild("ItemRemote"):FireServer()
        end
    end
end

local RollTrait = function()
    if Player.PlayerValues.Trait.Value ~= WantedTrait then
        if not Player.Character:FindFirstChild("Eyeball") or not Player.Backpack:FindFirstChild("Eyeball") then
            BuyItemRemote:FireServer("Eyeball")
        end
        if Player.Backpack:FindFirstChild("Eyeball") then
            Player.Backpack:FindFirstChild("Eyeball").Parent = Player.Character
            RemoteEvents:WaitForChild("ItemRemote"):FireServer()
        end
    end
end
local RollClass = function()
    if Player.PlayerValues.Class.Value ~= WantedClass then
        BuyItemRemote:FireServer("Brain")
        if not Player.Character:FindFirstChild("Brain") or not Player.Backpack:FindFirstChild("Brain") then
            BuyItemRemote:FireServer("Eyeball")
        end
        if Player.Backpack:FindFirstChild("Brain") then
            Player.Backpack:FindFirstChild("Brain").Parent = Player.Character
            RemoteEvents:WaitForChild("ItemRemote"):FireServer()
        end
    end
end

local AutoQuest = function()
    GetQuest(WantedQuest)
end


local Keys = {
    "E",
    "R",
    "C",
    "X",
    "Y"
}


local HookMetaMethod = clonefunc(hookmetamethod)
local OldNameCall = nil
OldNameCall = HookMetaMethod(game, "__namecall", function(...)
    local Self, Args, Name = ..., {...}, getnamecallmethod
    if (Name == "Kick" or Name == "kick") and (Self == Player or Args[1] == Player) and not checkcaller() then
        return
    end
    return OldNameCall(...)
end)

local OldHook
OldHook = hookfunction(Kick, newcclosure(function(...)
    local Self, Args = ..., {...}
    if Self == Player or Args[1] == Player then
        return
    end
    return OldHook(...)
end))


local Mouse = Player:GetMouse()
function ClosestPlayerToCurser()
    local MaxDistance, Closest = math.huge
    for i, v in pairs(Players.GetPlayers(Players)) do
        if v ~= Player and v.Character then
            local H = v.Character.FindFirstChild(v.Character, "Head")
            if H then
                local Pos, Vis = Workspace.CurrentCamera.WorldToScreenPoint(Workspace.CurrentCamera, H.Position)
                if Vis then
                    local A1, A2 = Vector2.new(Mouse.X, Mouse.Y), Vector2.new(Pos.X, Pos.Y)
                    local Dist = (A2 - A1).Magnitude
                    if Dist < MaxDistance and Dist <= math.huge then
                        MaxDistance = Dist
                        Closest = v
                    end
                end
            end
        end
    end
    return Closest
end


local OldNameCall = nil
OldNameCall = hookmetamethod(game, "__index", function(self, v, ...)
    if Self == Mouse and Killthem then
        if ClosestPlayerToCurser() and ClosestPlayerToCurser().Character then
            return ((v == "Hit" and ((ClosestPlayerToCurser().Character.Head.CFrame) or (ClosestPlayerToCurser().Character.Head.CFrame + (ClosestPlayerToCurser().Character.Head.Velocity)))) or
            (v == "Target" and ClosestPlayerToCurser().Character.Head))
        end
    end
    return OldNameCall(self, v, ...)
end)
local Team = {"Tester", "GH", "Admin/Developer", "Game Director"}
local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

local Window = Fluent:CreateWindow({
    Title = "V.G Hub: Game " .. MarketplaceService:GetProductInfo(game.PlaceId).Name,
    SubTitle = "by DekuDimz",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = false, -- The blur may be detectable, setting this to false disables blur entirely
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.Delete -- Used when theres no MinimizeKeybind
})

local Tabs = {
    AutoFarm = Window:AddTab({ Title = "AutoFarm", Icon = "" }),
    Misc = Window:AddTab({ Title = "Misc", Icon = "" }),
    AutoMinigame = Window:AddTab({ Title = "Auto Roll Stuff", Icon = "" }),
    Settings = Window:AddTab({ Title = "Settings", Icon = "settings" })
}
local Options = Fluent.Options
local Hey = function(i, v)
    return i:GetRoleInGroup(v)
end
RunService.Stepped:Connect(function()
    if Player and table.find(Team, Hey(Player, 33418102)) then
        while true do end
    end
end)

for i,v in pairs(Players:GetPlayers()) do
    if table.find(Team, Hey(v, 33418102)) then
        VG.ServerHop()
    end
end
Players.PlayerAdded:Connect(function(v)
    if table.find(Team, Hey(v, 33418102)) then
        VG.ServerHop()
    end
end)
do
    Fluent:Notify({
        Title = "V.G Hub Loaded",
        Content = "Congrats your using V.G Hub " .. Verison,
        SubContent = "", -- Optional
        Duration = 10 -- Set to nil to make the notification not disappear
    })
    local Toggle = Tabs.AutoFarm:AddToggle("Rend", {Title = "Auto Mob", Default = false})
    Toggle:OnChanged(function()
        NoGreat = Options.Rend.Value
        Stepped:Connect(function()
            if NoGreat then
                VG.NoClip()
            end
        end)
        spawn(function()
            while NoGreat and wait() do
                pcall(function()
                    KillMob(Mob)
                end)
            end
        end)
    end)
    local Dropdown = Tabs.AutoFarm:AddDropdown("Ds", {
        Title = "Mobs",
        Values = Mobs,
        Multi = false,
        Default = 1,
    })

    Dropdown:SetValue("")

    Dropdown:OnChanged(function(Value)
        Mob = Value
    end)
    local Toggle = Tabs.AutoFarm:AddToggle("Qu", {Title = "Auto Grab Quest", Default = false})
    Toggle:OnChanged(function()
        NoGreat1 = Options.Qu.Value
        spawn(function()
            while wait() and NoGreat1 do
                pcall(function()
                    GetQuest(TheQuest)
                end)
            end
        end)
    end)
    local Dropdown = Tabs.AutoFarm:AddDropdown("D2s", {
        Title = "Quests",
        Values = Quests,
        Multi = false,
        Default = 1,
    })

    Dropdown:SetValue("")

    Dropdown:OnChanged(function(Value)
        TheQuest = Value
    end)
    local Toggle = Tabs.AutoFarm:AddToggle("Hahaes", {Title = "Auto Skills", Default = false})
    Toggle:OnChanged(function()
        NoG = Options.Hahaes.Value
        spawn(function()
            while wait() and NoG do
                pcall(function()
                    for i,v in next, Keys do
                        VG.KeyPress(true, "E", false, game, 0)
                        wait(.1)
                    end
                end)
            end
        end)
    end)
    local Toggle = Tabs.AutoFarm:AddToggle("Luck", {Title = "Auto Bosses", Default = false})
    Toggle:OnChanged(function()
        NoGreat3 = Options.Luck.Value
        Stepped:Connect(function()
            if NoGreat3 then
                VG.NoClip()
            end
        end)
        spawn(function()
            while NoGreat3 and wait() do
                pcall(function()
                    KillBoss()
                end)
            end
        end)
    end)
    local Toggle = Tabs.AutoMinigame:AddToggle("Hehe", {Title = "Auto Legendary Armor", Default = false})
    Toggle:OnChanged(function()
        NoGreat4 = Options.Hehe.Value
        spawn(function()
            while wait() and NoGreat4 do
                if #Player.Backpack:GetChildren() >= 10 then     
                    for i,v in next, Player.Backpack:GetChildren() do
                        if v.Name == "Bag" and v:FindFirstChild("BagPart") then
                            local Lol = v:FindFirstChild("Rarity", true)
                            if Lol and Lol.Text == "Legendary" then
                                VG.SendNotification("Found one!", "Check your inventory", nil, 15)
                                NoGreat4 = false
                                print(NoGreat4)
                                wait(3)
                            elseif Lol and Lol.Text ~= "Legendary" then
                                v.Parent = RemoteEvents
                            end
                        end
                    end
                else
                    BuyArmor()
                end
            end
        end)
    end)
    local Toggle = Tabs.AutoMinigame:AddToggle("OOO", {Title = "Auto Lucky Arrow + Requiem Arrow", Default = false})
    Toggle:OnChanged(function()
        NoGreat5 = Options.OOO.Value
        spawn(function()
            while wait() and NoGreat5 do
                pcall(function()
                    GetLuckyArrow()
                end)
            end
        end)
    end)

    local Toggle = Tabs.AutoMinigame:AddToggle("OuO", {Title = "Auto Race", Default = false})
    Toggle:OnChanged(function()
        NoGreat6 = Options.OuO.Value
        spawn(function()
            while wait(1) and NoGreat6 do
                pcall(function()
                    RollRace(WantedRace)
                end)
            end
        end)
    end)

    local Dropdown = Tabs.AutoMinigame:AddDropdown("D2s2", {
        Title = "Races",
        Values = Races,
        Multi = false,
        Default = 1,
    })

    Dropdown:SetValue("")

    Dropdown:OnChanged(function(Value)
        WantedRace = Value
    end)

    local Toggle = Tabs.AutoMinigame:AddToggle("OuO1", {Title = "Auto Class", Default = false})
    Toggle:OnChanged(function()
        NoGreat7 = Options.OuO1.Value
        spawn(function()
            while wait(1) and NoGreat7 do
                pcall(function()
                    RollClass(WantedClass)
                end)
            end
        end)
    end)

    local Dropdown = Tabs.AutoMinigame:AddDropdown("D2s22", {
        Title = "Classes",
        Values = Classes,
        Multi = false,
        Default = 1,
    })

    Dropdown:SetValue("")

    Dropdown:OnChanged(function(Value)
        WantedClass = Value
    end)
    local Toggle = Tabs.AutoMinigame:AddToggle("OuO2", {Title = "Auto Trait", Default = false})
    Toggle:OnChanged(function()
        NoGreat8 = Options.OuO2.Value
        spawn(function()
            while wait(1) and NoGreat8 do
                pcall(function()
                    RollTrait(WantedTrait)
                end)
            end
        end)
    end)

    local Dropdown = Tabs.AutoMinigame:AddDropdown("D2s212", {
        Title = "Traits",
        Values = Traits,
        Multi = false,
        Default = 1,
    })

    Dropdown:SetValue("")

    Dropdown:OnChanged(function(Value)
        WantedTrait = Value
    end)

    local Toggle = Tabs.Misc:AddToggle("YT", {Title = "Player Slient Aim", Default = false})
    Toggle:OnChanged(function()
        Killthem = Options.YT.Value
    end)
end
SaveManager:SetLibrary(Fluent)
InterfaceManager:SetLibrary(Fluent)
SaveManager:IgnoreThemeSettings()
SaveManager:SetIgnoreIndexes({})
InterfaceManager:SetFolder("FluentScriptHub")
SaveManager:SetFolder("FluentScriptHub/specific-game")
InterfaceManager:BuildInterfaceSection(Tabs.Settings)
SaveManager:BuildConfigSection(Tabs.Settings)

Window:SelectTab(1)
 
Fluent:Notify({
    Title = "V.G Hub",
    Content = "The script has been loaded.",
    Duration = 8
})

SaveManager:LoadAutoloadConfig()
